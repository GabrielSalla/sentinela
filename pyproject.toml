[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "Sentinela"
version = "0.2.2"
description = "Sentinela Monitoring Platform"
authors = ["Gabriel Salla <gabriel.c.salla@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
aioboto3 = "^13.2.0"
aiohttp = "^3.11.11"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
certifi = "*"
croniter = "^5.0.1"
prometheus-client = "^0.21.1"
pydantic = "^2.10.4"
python = "^3.12"
pytz = "*"
pyyaml = "^6.0.2"
slack-bolt = "^1.22.0"
sqlalchemy = "^2.0.36"
tabulate = "^0.9.0"
uvloop = "^0.21.0"

[tool.poetry.group.dev.dependencies]
flake8 = "*"
flake8-pyproject = "*"
mypy = "*"
pytest = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest-mock = "*"
types-tabulate = "*"
types-setuptools = "*"
types-requests = "*"
types-pyyaml = "*"
types-pytz = "*"
types-pymysql = "*"
types-croniter = "*"

[tool.flake8]
max-line-length = 100

[tool.black]
line-length = 100

[tool.mypy]
mypy_path = "src"
ignore_missing_imports = true
warn_return_any = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["arg-type", "empty-body", "misc", "list-item"]

[tool.isort]
src_paths = ["src", "tests"]
skip = ["alembic", "tmp", "_monitors", "_monitors_load"]
line_length = 100
include_trailing_comma = true
multi_line_output = 3

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = "tests"
addopts = "-rf --show-capture=all --color=yes --cov=src --cov-report=term-missing --cov-fail-under=100"

asyncio_default_fixture_loop_scope = "session"

log_cli = false
log_level = "INFO"
log_format = "%(asctime)s [%(levelname)s] %(name)s.%(funcName)s.%(lineno)d: %(message)s"

# Disable botocore 'datetime.datetime.utcnow()' deprecation warning
filterwarnings = "ignore:datetime.datetime.utcnow:DeprecationWarning"
